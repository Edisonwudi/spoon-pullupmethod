<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.example.refactoring.MissingChildStubGenerationTest" time="0.573" tests="5" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="18"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="GBK"/>
    <property name="java.class.path" value="C:\Users\wudi\Desktop\spoon\target\test-classes;C:\Users\wudi\Desktop\spoon\target\classes;C:\Users\wudi\.m2\repository\fr\inria\gforge\spoon\spoon-core\10.4.2\spoon-core-10.4.2.jar;C:\Users\wudi\.m2\repository\org\eclipse\jdt\org.eclipse.jdt.core\3.33.0\org.eclipse.jdt.core-3.33.0.jar;C:\Users\wudi\.m2\repository\org\eclipse\jdt\ecj\3.33.0\ecj-3.33.0.jar;C:\Users\wudi\.m2\repository\com\martiansoftware\jsap\2.1\jsap-2.1.jar;C:\Users\wudi\.m2\repository\commons-io\commons-io\2.14.0\commons-io-2.14.0.jar;C:\Users\wudi\.m2\repository\org\apache\maven\maven-model\3.6.0\maven-model-3.6.0.jar;C:\Users\wudi\.m2\repository\org\codehaus\plexus\plexus-utils\3.1.0\plexus-utils-3.1.0.jar;C:\Users\wudi\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\wudi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\wudi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\wudi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\wudi\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\wudi\.m2\repository\org\jspecify\jspecify\0.3.0\jspecify-0.3.0.jar;C:\Users\wudi\.m2\repository\org\apache\maven\shared\maven-invoker\3.2.0\maven-invoker-3.2.0.jar;C:\Users\wudi\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.3.4\maven-shared-utils-3.3.4.jar;C:\Users\wudi\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\wudi\.m2\repository\commons-cli\commons-cli\1.5.0\commons-cli-1.5.0.jar;C:\Users\wudi\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\wudi\.m2\repository\org\slf4j\slf4j-simple\2.0.7\slf4j-simple-2.0.7.jar;C:\Users\wudi\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\wudi\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\wudi\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\wudi\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\wudi\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\wudi\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="Asia/Shanghai"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="18"/>
    <property name="spoon.log.path" value="${java.io.tmpdir}/spoon-log.log"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CN"/>
    <property name="sun.boot.library.path" value="C:\Users\wudi\.jdks\corretto-18.0.2\bin"/>
    <property name="sun.java.command" value="C:\Users\wudi\AppData\Local\Temp\surefire14459247825830260326\surefirebooter-20250909014454367_3.jar C:\Users\wudi\AppData\Local\Temp\surefire14459247825830260326 2025-09-09T01-44-54_093-jvmRun1 surefire-20250909014454367_1tmp surefire_0-20250909014454367_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\wudi\Desktop\spoon\target\test-classes;C:\Users\wudi\Desktop\spoon\target\classes;C:\Users\wudi\.m2\repository\fr\inria\gforge\spoon\spoon-core\10.4.2\spoon-core-10.4.2.jar;C:\Users\wudi\.m2\repository\org\eclipse\jdt\org.eclipse.jdt.core\3.33.0\org.eclipse.jdt.core-3.33.0.jar;C:\Users\wudi\.m2\repository\org\eclipse\jdt\ecj\3.33.0\ecj-3.33.0.jar;C:\Users\wudi\.m2\repository\com\martiansoftware\jsap\2.1\jsap-2.1.jar;C:\Users\wudi\.m2\repository\commons-io\commons-io\2.14.0\commons-io-2.14.0.jar;C:\Users\wudi\.m2\repository\org\apache\maven\maven-model\3.6.0\maven-model-3.6.0.jar;C:\Users\wudi\.m2\repository\org\codehaus\plexus\plexus-utils\3.1.0\plexus-utils-3.1.0.jar;C:\Users\wudi\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\wudi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\wudi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\wudi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\wudi\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\wudi\.m2\repository\org\jspecify\jspecify\0.3.0\jspecify-0.3.0.jar;C:\Users\wudi\.m2\repository\org\apache\maven\shared\maven-invoker\3.2.0\maven-invoker-3.2.0.jar;C:\Users\wudi\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.3.4\maven-shared-utils-3.3.4.jar;C:\Users\wudi\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\wudi\.m2\repository\commons-cli\commons-cli\1.5.0\commons-cli-1.5.0.jar;C:\Users\wudi\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\wudi\.m2\repository\org\slf4j\slf4j-simple\2.0.7\slf4j-simple-2.0.7.jar;C:\Users\wudi\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\wudi\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\wudi\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\wudi\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\wudi\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\wudi\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\wudi"/>
    <property name="user.language" value="zh"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-07-19"/>
    <property name="java.home" value="C:\Users\wudi\.jdks\corretto-18.0.2"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\wudi\Desktop\spoon"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\wudi\AppData\Local\Temp\surefire14459247825830260326\surefirebooter-20250909014454367_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="18.0.2+9-FR"/>
    <property name="user.name" value="wudi"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-18.0.2.9.1"/>
    <property name="localRepository" value="C:\Users\wudi\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-18/issues/"/>
    <property name="java.io.tmpdir" value="C:\Users\wudi\AppData\Local\Temp\"/>
    <property name="java.version" value="18.0.2"/>
    <property name="user.dir" value="C:\Users\wudi\Desktop\spoon"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="GBK"/>
    <property name="java.library.path" value="C:\Users\wudi\.jdks\corretto-18.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Daily Software\CUDA11_7\bin;C:\Daily Software\CUDA11_7\libnvvp;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Users\wudi\.jdks\corretto-18.0.2\bin;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\Daily Software\Git\cmd;D:\Daily Software\nodejs\node_global\node_modules;C:\Program Files\NVIDIA Corporation\Nsight Compute 2022.2.0\;D:\Daily Software\apache-ant-1.10.14-bin\apache-ant-1.10.14\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;D:\Cloc;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;D:\Daily Software\codeql;D:\nvm;C:\nvm4w\nodejs;D:\mingw64\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\wudi\Desktop\pmd-bin-7.14.0\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\wudi\AppData\Local\Programs\Python\Python310\;C:\Users\wudi\AppData\Local\Programs\Python\Python37\Scripts\;C:\Users\wudi\AppData\Local\Programs\Python\Python37\;C:\Users\wudi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\wudi\AppData\Local\Programs\Python\Python36\Scripts\;C:\Users\wudi\AppData\Local\Programs\Python\Python36\;C:\Daily Software\apache-maven-3.8.8-bin\apache-maven-3.8.8\bin;D:\Daily Software\anaconda;D:\Daily Software\anaconda\Library\mingw-w64\bin;D:\Daily Software\anaconda\Library\usr\bin;D:\Daily Software\anaconda\Library\bin;D:\Daily Software\anaconda\Scripts;C:\Users\wudi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\PyCharm 2021.3\bin;;D:\Daily Software\IntelliJ IDEA 2023.2.2\bin;;C:\Daily Software\sonar-scanner-cli-4.3.0.2102-windows\sonar-scanner-4.3.0.2102-windows\bin;D:\Daily Software\IntelliJ IDEA Community Edition 2019.3.5\bin;;D:\Daily Software\gradle-8.0.2-all\gradle-8.0.2\bin;D:\Daily Software\Microsoft VS Code\bin;C:\Users\wudi\AppData\Local\GitHubDesktop\bin;C:\Users\wudi\Desktop\test\DependencyFinder-1.4.0\bin;D:\Daily Software\codeql;D:\Daily Software\cursor\resources\app\bin;D:\nvm;C:\nvm4w\nodejs;D:\Windsurf\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="18.0.2+9-FR"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="62.0"/>
  </properties>
  <testcase name="testAncestorConcretePreventsDuplicateChildStub" classname="com.example.refactoring.MissingChildStubGenerationTest" time="0.192">
    <system-err><![CDATA[[main] WARN com.example.refactoring.core.PullUpMethodRefactoring - PullUpMethodRefactoring 已被弃用，建议使用 RefactoringOrchestrator
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 开始Pull-Up-Method重构: 类=ChildX, 方法=work 到直接父类
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 找到目标祖先类: test.BaseD
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 3 个后代类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 发现 1 个依赖方法需要上提为抽象方法
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 父类 BaseD 已设置为抽象类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 成功上提抽象方法: helper
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 自动上提了 1 个依赖方法为抽象方法
[main] INFO com.example.refactoring.core.RefactoringOrchestrator -   - 上提抽象方法: helper
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 3 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 ParentY 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.SnapshotManager - 已保存重构快照到: C:\Users\wudi\AppData\Local\Temp\junit13843379176153922998\.refactor-snapshot (3 个文件)
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 3 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 ParentY 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit13843379176153922998\ChildX.java (ChildX)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit13843379176153922998\BaseD.java (BaseD)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit13843379176153922998\ParentY.java (ParentY)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.ModuleResolver - 模块解析完成，索引包前缀数量: 0
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 3 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 ParentY 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit13843379176153922998\ChildX.java (ChildX)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit13843379176153922998\BaseD.java (BaseD)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit13843379176153922998\ParentY.java (ParentY)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - Pull-Up-Method重构完成，修改了 3 个文件
]]></system-err>
  </testcase>
  <testcase name="testGenerateStubForGrandChild" classname="com.example.refactoring.MissingChildStubGenerationTest" time="0.111">
    <system-err><![CDATA[[main] WARN com.example.refactoring.core.PullUpMethodRefactoring - PullUpMethodRefactoring 已被弃用，建议使用 RefactoringOrchestrator
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 开始Pull-Up-Method重构: 类=Leaf1C, 方法=work 到直接父类
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 找到目标祖先类: test.MidC
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 发现 1 个依赖方法需要上提为抽象方法
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 父类 MidC 已设置为抽象类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 成功上提抽象方法: helper
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 为子类 Leaf2C 生成方法 helper 的基础实现
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 自动上提了 1 个依赖方法为抽象方法
[main] INFO com.example.refactoring.core.RefactoringOrchestrator -   - 上提抽象方法: helper
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 Leaf2C 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.SnapshotManager - 已保存重构快照到: C:\Users\wudi\AppData\Local\Temp\junit5324710361778106128\.refactor-snapshot (3 个文件)
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 Leaf2C 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5324710361778106128\MidC.java (MidC)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5324710361778106128\Leaf1C.java (Leaf1C)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5324710361778106128\Leaf2C.java (Leaf2C)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.ModuleResolver - 模块解析完成，索引包前缀数量: 0
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 Leaf2C 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5324710361778106128\MidC.java (MidC)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5324710361778106128\Leaf1C.java (Leaf1C)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5324710361778106128\Leaf2C.java (Leaf2C)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - Pull-Up-Method重构完成，修改了 3 个文件
]]></system-err>
  </testcase>
  <testcase name="testIntermediateAncestorMethodPulledUpWhenTargetIsHigherAncestor" classname="com.example.refactoring.MissingChildStubGenerationTest" time="0.104">
    <system-err><![CDATA[[main] WARN com.example.refactoring.core.PullUpMethodRefactoring - PullUpMethodRefactoring 已被弃用，建议使用 RefactoringOrchestrator
[main] WARN com.example.refactoring.core.PullUpMethodRefactoring - PullUpMethodRefactoring 已被弃用，建议使用 RefactoringOrchestrator
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 开始Pull-Up-Method重构: 类=LeafE, 方法=work 到祖先类=BaseE
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 找到目标祖先类: test.BaseE
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 发现 1 个依赖方法需要上提为抽象方法
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 父类 BaseE 已设置为抽象类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 成功上提抽象方法: helper
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 自动上提了 1 个依赖方法为抽象方法
[main] INFO com.example.refactoring.core.RefactoringOrchestrator -   - 上提抽象方法: helper
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 MidE 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.SnapshotManager - 已保存重构快照到: C:\Users\wudi\AppData\Local\Temp\junit5306883126525455060\.refactor-snapshot (3 个文件)
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 MidE 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5306883126525455060\LeafE.java (LeafE)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5306883126525455060\BaseE.java (BaseE)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5306883126525455060\MidE.java (MidE)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.ModuleResolver - 模块解析完成，索引包前缀数量: 0
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 MidE 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5306883126525455060\LeafE.java (LeafE)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5306883126525455060\BaseE.java (BaseE)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit5306883126525455060\MidE.java (MidE)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - Pull-Up-Method重构完成，修改了 3 个文件
]]></system-err>
  </testcase>
  <testcase name="testGenerateStubForMissingChild_voidReturn" classname="com.example.refactoring.MissingChildStubGenerationTest" time="0.069">
    <system-err><![CDATA[[main] WARN com.example.refactoring.core.PullUpMethodRefactoring - PullUpMethodRefactoring 已被弃用，建议使用 RefactoringOrchestrator
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 开始Pull-Up-Method重构: 类=ChildC, 方法=run 到直接父类
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 找到目标祖先类: test.BaseB
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 发现 1 个依赖方法需要上提为抽象方法
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 父类 BaseB 已设置为抽象类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 成功上提抽象方法: helper
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 为子类 ChildD 生成方法 helper 的基础实现
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 自动上提了 1 个依赖方法为抽象方法
[main] INFO com.example.refactoring.core.RefactoringOrchestrator -   - 上提抽象方法: helper
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 ChildD 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.SnapshotManager - 已保存重构快照到: C:\Users\wudi\AppData\Local\Temp\junit15832562153196455332\.refactor-snapshot (3 个文件)
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 ChildD 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit15832562153196455332\ChildD.java (ChildD)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit15832562153196455332\ChildC.java (ChildC)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit15832562153196455332\BaseB.java (BaseB)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.ModuleResolver - 模块解析完成，索引包前缀数量: 0
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 ChildD 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit15832562153196455332\ChildD.java (ChildD)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit15832562153196455332\ChildC.java (ChildC)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit15832562153196455332\BaseB.java (BaseB)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - Pull-Up-Method重构完成，修改了 3 个文件
]]></system-err>
  </testcase>
  <testcase name="testGenerateStubForMissingChild_nonVoidReturn" classname="com.example.refactoring.MissingChildStubGenerationTest" time="0.088">
    <system-err><![CDATA[[main] WARN com.example.refactoring.core.PullUpMethodRefactoring - PullUpMethodRefactoring 已被弃用，建议使用 RefactoringOrchestrator
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 开始Pull-Up-Method重构: 类=ChildA, 方法=doWork 到直接父类
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 找到目标祖先类: test.BaseA
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 发现 1 个依赖方法需要上提为抽象方法
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 父类 BaseA 已设置为抽象类
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 成功上提抽象方法: helper
[main] INFO com.example.refactoring.handler.MethodPullUpHandler - 为子类 ChildB 生成方法 helper 的基础实现
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - 自动上提了 1 个依赖方法为抽象方法
[main] INFO com.example.refactoring.core.RefactoringOrchestrator -   - 上提抽象方法: helper
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 ChildB 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.SnapshotManager - 已保存重构快照到: C:\Users\wudi\AppData\Local\Temp\junit4317126545765090836\.refactor-snapshot (3 个文件)
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 ChildB 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit4317126545765090836\ChildB.java (ChildB)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit4317126545765090836\ChildA.java (ChildA)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit4317126545765090836\BaseA.java (BaseA)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.ModuleResolver - 模块解析完成，索引包前缀数量: 0
[main] INFO com.example.refactoring.core.ClassFinder - 收集到 2 个后代类
[main] INFO com.example.refactoring.core.CodeGenerator - 检测到后代类 ChildB 有方法修改，将包含在输出中
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit4317126545765090836\ChildB.java (ChildB)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit4317126545765090836\ChildA.java (ChildA)
[main] INFO com.example.refactoring.core.CodeGenerator - 已修改文件: C:\Users\wudi\AppData\Local\Temp\junit4317126545765090836\BaseA.java (BaseA)
[main] INFO com.example.refactoring.core.CodeGenerator - 重构完成：修改了 3 个相关类文件
[main] INFO com.example.refactoring.core.RefactoringOrchestrator - Pull-Up-Method重构完成，修改了 3 个文件
]]></system-err>
  </testcase>
</testsuite>